#include "interface.h"

void print_dynamic_string(Dynamic_String *ds) 
{
    wprintf(L"String: %ls\n", ds->data);
    wprintf(L"Size: %d\n", ds->size);
}

int main() 
{
    // Set locale for wide character output
    setlocale(LC_ALL, "");

    // Test init_dynamic_string
    Dynamic_String *ds0 = init_dynamic_string(L"Hello ä¸–ç•Œ ðŸ”¥");
    Dynamic_String *ds1 = init_dynamic_string(L"Hello ä¸–ç•Œ ðŸ”¥");

    wprintf(L"After initialization:\n");
    print_dynamic_string(ds0);

    // Test append_to_dynamic_string
    append_to_dynamic_string(ds0, L" How are you?");
    wprintf(L"\nAfter appending:\n");
    print_dynamic_string(ds0);

    // Test prepend_to_dynamic_string
    prepend_to_dynamic_string(ds0, L"Greetings! ");
    wprintf(L"\nAfter prepending:\n");
    print_dynamic_string(ds0);

    // Test replace_dynamic_string
    replace_dynamic_string(ds0, L"This is a new string.");
    wprintf(L"\nAfter replacing:\n");
    print_dynamic_string(ds0);

    // Test substitute_in_dynamic_string
    substitute_in_dynamic_string(ds0, L"new", L"modified");
    wprintf(L"\nAfter substitution:\n");
    print_dynamic_string(ds0);

    // Test dynamic_strings_equal
    bool r = dynamic_strings_equal(ds0, ds1);
    if (r)
    {
        printf("The two dynamic strings are equal.\n");
    }
    else
    {
        printf("The two dynamic strings are not equal.\n");
    }

    // Test free_dynamic_string
    free_dynamic_string(ds0);
    free_dynamic_string(ds1);
    wprintf(L"\nDynamically allocated memory freed.\n");
    return 0;
}